// Generated by CoffeeScript 1.10.0
var GamePlay;

GamePlay = (function() {
  GamePlay.prototype.moteur = null;

  GamePlay.prototype.spriteG = null;

  GamePlay.prototype.spriteD = null;

  function GamePlay(game1) {
    this.game = game1;
    if (debug) {
      console.log('GamePlay::construct()');
    }
    this.moteur = new tronEngine(500, 500);
  }

  GamePlay.prototype.preload = function() {
    if (debug) {
      console.log('GamePlay::preload()');
    }
    game.load.image('fleche_gauche', 'assets/fleche_gauche.png');
    return game.load.image('fleche_droite', 'assets/fleche_droite.png');
  };

  GamePlay.prototype.create = function() {
    if (debug) {
      console.log('GamePlay::create()');
    }
    this.spriteG = game.add.sprite(0, 0, 'fleche_gauche');
    this.spriteG.scale.setTo(0.2, 0.2);
    this.spriteD = game.add.sprite(50, 0, 'fleche_droite');
    this.spriteD.scale.setTo(0.2, 0.2);
    this.spriteG.inputEnabled = true;
    this.spriteG.events.onInputDown.add(this.listenerBoutonG, this);
    this.spriteD.inputEnabled = true;
    return this.spriteD.events.onInputDown.add(this.listenerBoutonD, this);
  };

  GamePlay.prototype.listenerBoutonG = function() {
    if (debug) {
      console.log("bonton gauche");
    }
    return this.moteur.player1.tourneGauche();
  };

  GamePlay.prototype.listenerBoutonD = function() {
    if (debug) {
      console.log("bonton droit");
    }
    return this.moteur.player1.tourneDroite();
  };

  GamePlay.prototype.update = function() {
    if (debug) {
      console.log('GamePlay::update()');
    }
    return this.moteur.nextStep();
  };

  return GamePlay;

})();

//# sourceMappingURL=GamePlay.js.map
