// Generated by CoffeeScript 1.10.0
var tronBike, tronEngine;

tronBike = (function() {
  tronBike.prototype.posX = 0;

  tronBike.prototype.posY = 0;

  tronBike.prototype.direction = 0;

  function tronBike(posX, posY, direction) {
    this.posX = posX;
    this.posY = posY;
    this.direction = direction;
  }

  tronBike.prototype.avance = function() {
    if (this.direction === 3) {
      this.posX--;
    }
    if (this.direction === 1) {
      this.posX++;
    }
    if (this.direction === 0) {
      this.posY--;
    }
    if (this.direction === 2) {
      return this.posY++;
    }
  };

  tronBike.prototype.tourneDroite = function() {
    this.direction++;
    if (this.direction === 4) {
      this.direction = 0;
    }
    if (debug) {
      return console.log('tourne droite');
    }
  };

  tronBike.prototype.tourneGauche = function() {
    this.direction--;
    if (this.direction === -1) {
      this.direction = 3;
    }
    if (debug) {
      return console.log('tourne gauche');
    }
  };

  return tronBike;

})();

tronEngine = (function() {
  tronEngine.prototype.player1 = 0;

  tronEngine.prototype.player2 = 0;

  tronEngine.prototype.player3 = 0;

  tronEngine.prototype.player4 = 0;

  tronEngine.prototype.tronMap = [];

  function tronEngine(dimensionX, dimensionY) {
    this.tronMap = new Array(dimensionX * dimensionY);
    this.player1 = new tronBike(50, 50, 2);
    this.player2 = new tronBike(200, 50, 2);
    this.player3 = new tronBike(50, 200, 0);
    this.player4 = new tronBike(200, 200, 0);
  }

  tronEngine.prototype.nextStep = function() {
    this.player1.avance();
    this.player2.avance();
    this.player3.avance();
    this.player4.avance();
    if (debug) {
      return console.log(this.player1.posX + " " + this.player1.posY);
    }
  };

  return tronEngine;

})();

//# sourceMappingURL=tron.js.map
